//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Dec  5 2019 09:59:31).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Preferences/PSDetailController.h>

@class NSDictionary, NSNumber, NSString, UIBarButtonItem;
@protocol DevicePINControllerDelegate;

@interface DevicePINController : PSDetailController
{
    int _mode;
    int _substate;
    NSString *_oldPassword;
    NSString *_lastEntry;
    BOOL _success;
    id _pinDelegate;
    UIBarButtonItem *_cancelButton;
    UIBarButtonItem *_nextButton;
    UIBarButtonItem *_doneButton;
    NSString *_error1;
    NSString *_error2;
    BOOL _hasBeenDismissed;
    long long _sepOnceToken;
    NSDictionary *_sepLockInfo;
    BOOL _useSEPLockInfo;
    NSNumber *_requiresKeyboard;
    NSNumber *_pinLength;
    NSNumber *_simplePIN;
    NSNumber *_numericPIN;
    BOOL _hidesNavigationButtons;
    BOOL _hidesCancelButton;
    BOOL _shouldDismissWhenDone;
    BOOL _allowOptionsButton;
    NSString *_doneButtonTitle;
}

+ (BOOL)settingEnabled;
@property(nonatomic) BOOL allowOptionsButton; // @synthesize allowOptionsButton=_allowOptionsButton;
@property(copy, nonatomic) NSString *doneButtonTitle; // @synthesize doneButtonTitle=_doneButtonTitle;
@property(nonatomic) BOOL shouldDismissWhenDone; // @synthesize shouldDismissWhenDone=_shouldDismissWhenDone;
@property(nonatomic) BOOL hidesCancelButton; // @synthesize hidesCancelButton=_hidesCancelButton;
@property(nonatomic) BOOL hidesNavigationButtons; // @synthesize hidesNavigationButtons=_hidesNavigationButtons;
@property(nonatomic) __weak id <DevicePINControllerDelegate> pinDelegate; // @synthesize pinDelegate=_pinDelegate;
// - (void).cxx_destruct;
- (void)setSuccess:(BOOL)arg1;
- (BOOL)success;
- (id)title;
- (void)setPane:(id)arg1;
- (id)pinPane;
- (void)showPasscodeOptions:(id)arg1;
- (id)passcodeOptionsAlertController;
- (void)_setPINPaneToSimple:(BOOL)arg1 simpleLength:(int)arg2 numeric:(BOOL)arg3 requiresKeyboard:(int)arg4;
- (BOOL)_shouldShowOptionsButton;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (id)pinInstructionsPromptFont;
- (id)pinInstructionsPrompt;
- (void)cancelButtonTapped;
- (BOOL)_shouldCheckForWeakness;
- (void)_preflightPasswordForWeakness:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)_removePinWithOldPassword:(id)arg1;
- (void)pinEntered:(id)arg1;
- (BOOL)_asyncSetPinCompatible;
- (void)_slidePasscodeFieldLeft:(BOOL)arg1;
- (void)viewWillLayoutSubviews;
- (void)loadView;
- (BOOL)completedInputIsValid:(id)arg1;
- (void)adjustButtonsForPasswordLength:(NSUInteger)arg1;
- (void)_updatePINButtons;
- (BOOL)showSimplePINCancelButtonOnLeft;
- (void)_showPINConfirmationError;
- (void)_showUnacceptablePINError:(id)arg1 password:(id)arg2;
- (void)_updateUI;
- (void)_updateErrorTextAndFailureCount:(BOOL)arg1;
- (void)_showFailedAttempts;
- (void)suspend;
- (void)performActionAfterPINRemove;
- (void)performActionAfterPINSet;
- (void)performActionAfterPINEntry;
- (BOOL)attemptValidationWithPIN:(id)arg1;
- (void)_adjustUnblockTime;
- (double)_secondsToBlockForFailedAttempts:(long long)arg1;
- (void)_setUnblockTime:(double)arg1;
- (BOOL)isBlocked;
- (double)blockedTimeRemaining;
- (double)unblockTime;
- (void)_clearBlockedState;
- (void)_setNumberOfFailedAttempts:(long long)arg1;
- (long long)numberOfFailedAttempts;
- (void)_rereadBlockedState;
- (void)_invalidateSEPLockInfo;
- (id)_sepLockInfo;
- (BOOL)_useSEPLockInfo;
@property(nonatomic, getter=isNumericPIN) BOOL numericPIN;
- (BOOL)isCreatingPasscode;
@property(nonatomic) int pinLength;
@property(nonatomic) BOOL simplePIN;
@property(nonatomic) BOOL requiresKeyboard;
- (int)_simplePasscodeType;
- (int)_getScreenType;
// - (struct __CFString )blockedStateKey;
// - (struct __CFString )blockTimeIntervalKey;
// - (struct __CFString )failedAttemptsKey;
// - (struct __CFString )defaultsID;
- (BOOL)useProgressiveDelays;
- (BOOL)validatePIN:(id)arg1;
- (id)_createAndShowAnimatedNavBarSpinner;
- (void)setPIN:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setPIN:(id)arg1;
- (BOOL)pinIsAcceptable:(id)arg1 outError:(id )arg2;
- (void)setLastEntry:(id)arg1;
- (void)setOldPassword:(id)arg1;
- (void)dealloc;
- (id)stringsBundle;
- (id)stringsTable;
- (void)_dismiss;
- (CGSize)overallContentSizeForViewInPopover;
- (int)mode;
- (void)setMode:(int)arg1;
- (void)setSpecifier:(id)arg1;
- (id)init;
- (void)willUnlock;

@end

